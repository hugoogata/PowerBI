/*
Tabela Dimensão Calendario - Ano Fiscal, Offset e Mês de Fechamento Personalizado 
Autor do Repositorio: Hugo Kenzo Ogata
Desenvolvido: Hugo Kenzo Ogata
Ultima atualização: 04-04-2021
Descrição: Essa é uma tabela dimensão Calendario ou tambem conhecida com Ano Fiscal, Offset e Mês de Fechamento Personalizado.
*/

let
    //AnoMinDinamico = Date.Year(List.Min(fVendas[Data Venda])),
    //AnoMaxDinamico = Date.Year(List.Max(fVendas[Data Venda])),
    //DataInicio = #date(AnoMinDinamico, 1, 1),
    //DataFim = #date(AnoMaxDinamico, 12, 31),
    DataInicio = #date(AnoMin, 1, 1),
    DataFim = #date(AnoMax, 12, 31),
    DataAtual = DateTime.Date(DateTime.FixedLocalNow()),
    QtdDias = Duration.Days(Duration.From(DataFim - DataInicio))+1,
    Fonte = List.Dates(DataInicio,QtdDias,#duration(1,0,0,0)),
    CriaTabela = Table.FromList(Fonte, Splitter.SplitByNothing()),   
    TipoAlterado1 = Table.TransformColumnTypes(CriaTabela,{{"Column1", type date}}),
    RenomeiaColuna = Table.RenameColumns(TipoAlterado1,{{"Column1", "Data"}}),
    InsereAno = Table.AddColumn(RenomeiaColuna, "Ano", each Date.Year([Data]), type number),
    InsereTrimestre = Table.AddColumn(InsereAno, "Trimestre", each Date.QuarterOfYear([Data]), type number),
    InsereMesNo = Table.AddColumn(InsereTrimestre, "MesNo", each Date.Month([Data]), type number),
    InsereDia = Table.AddColumn(InsereMesNo, "Dia", each Date.Day([Data]), type number),
    InsereAnoMesDia = Table.AddColumn(InsereDia, "AnoMesDia", each [Ano] * 10000 + [MesNo] * 100 + [Dia], type number),
    InsereMes = Table.AddColumn(InsereAnoMesDia, "Mês", each Date.ToText([Data], "MMMM"), type text),
    InsereMesAno = Table.AddColumn(InsereMes, "Mês/Ano", each (try(Text.Range([Mês],0,3)) otherwise [Mês]) & "/" & Number.ToText([Ano]), type text),
    InsereTrimestreAno = Table.AddColumn(InsereMesAno, "Trimestre/Ano", each "T" & Number.ToText([Trimestre]) & "/" & Number.ToText([Ano]), type text),
    InsereDiaSemana = Table.AddColumn(InsereTrimestreAno, "Dia da Semana", each Date.DayOfWeek([Data]), Int64.Type),
    InsereNomeDia = Table.AddColumn(InsereDiaSemana, "Nome do Dia", each Date.ToText([Data], "dddd"), type text),
    InsereSemanaDoAno= Table.AddColumn(InsereNomeDia, "Semana do Ano", each Date.WeekOfYear([Data]), type number),
    InsereSemanaAno = Table.AddColumn(InsereSemanaDoAno, "Semana/Ano", each "S" & Text.From([Semana do Ano]) & "/" & Text.From([Ano]), type text ),
    InsereAnoSemana = Table.AddColumn(InsereSemanaAno, "AnoSemana", each [Ano] * 100 + [Semana do Ano], type number),
    InsereAnoMes = Table.AddColumn(InsereAnoSemana , "AnoMes", each [Ano] * 100 + [MesNo], type number),
    InsereAnoTrimestre = Table.AddColumn(InsereAnoMes, "AnoTrimestre", each [Ano] * 100 + [Trimestre], type number),
    InsereAnoFiscal = Table.AddColumn(InsereAnoTrimestre, "Ano Fiscal", each (if MesInicioAnoFiscal = 1 then Text.From([Ano]) & "/" & Text.From([Ano] + 1) else if [MesNo]>=MesInicioAnoFiscal then Text.From([Ano]) & "/" & Text.From([Ano] + 1) else Text.From([Ano] - 1) & "/" & Text.From([Ano])), type text),
    InsereTrimestreFiscal = Table.AddColumn(InsereAnoFiscal, "Trimestre Fiscal", each "FT" & Text.From( Number.RoundUp( Date.Month( Date.AddMonths( [Data], - (MesInicioAnoFiscal - 1) )) / 3 )), type text),
    InsereMesFiscal = Table.AddColumn(InsereTrimestreFiscal, "Mês Fiscal", each if [MesNo]>=MesInicioAnoFiscal then [MesNo]-(MesInicioAnoFiscal-1) else [MesNo]+(12-MesInicioAnoFiscal+1), type text),

    InsereFlagFuturo = Table.AddColumn(InsereMesFiscal, "Futuro", each not ([Data] <= Date.From(DataAtual)), type logical),
    InsereFlagDiaUtil = Table.AddColumn(InsereFlagFuturo, "Dia Útil", each if [Dia da Semana] = 5 then false else if [Dia da Semana] = 6 then false else true, type logical),

    InsereOffsetDia = Table.AddColumn(InsereFlagDiaUtil, "Offset Dia", each Number.From([Data] - DataAtual), type number),
    InsereOffsetSemana = Table.AddColumn(InsereOffsetDia, "Offset Semana", each (Number.From(Date.StartOfWeek([Data]))-Number.From(Date.StartOfWeek(DateTime.LocalNow())))/7, type number),
    InsereOffsetMes = Table.AddColumn(InsereOffsetSemana, "Offset Mês", each ((12 * Date.Year([Data])) +  Date.Month([Data])) - ((12 * Date.Year(Date.From(DataAtual))) +  Date.Month(Date.From(DataAtual))), type number),
    InsereOffsetTrimestre = Table.AddColumn(InsereOffsetMes, "Offset Trimestre", each ((4 * Date.Year([Data])) +  Date.QuarterOfYear([Data])) - ((4 * Date.Year(Date.From(DataAtual))) +  Date.QuarterOfYear(Date.From(DataAtual))), type number),
    InsereOffsetAno = Table.AddColumn(InsereOffsetTrimestre, "Offset Ano", each Date.Year([Data]) - Date.Year(Date.From(DataAtual)), type number),

    IdentificaDiaAtual = Table.SelectRows(InsereOffsetAno, each ([Data] = DataAtual)),
    AnoFiscalAtual = IdentificaDiaAtual{0}[Ano Fiscal], 
    InsereOffsetAnoFiscal = Table.AddColumn(InsereOffsetAno, "Offset Ano Fiscal", each Number.From(Text.Range([Ano Fiscal],2,2)) - Number.From(Text.Range(AnoFiscalAtual,2,2)), type number),

    InsereSemanaCompleta = Table.AddColumn(InsereOffsetAnoFiscal, "Semana Completa", each Date.EndOfWeek([Data]) < Date.From(Date.EndOfWeek(DataAtual)), type logical),
    InsereMesCompleto = Table.AddColumn(InsereSemanaCompleta, "Mês Completo", each Date.EndOfMonth([Data]) < Date.From(Date.EndOfMonth(DataAtual)), type logical),
    InsereTrimestreCompleto = Table.AddColumn(InsereMesCompleto, "Trimestre Completo", each Date.EndOfQuarter([Data]) < Date.From(Date.EndOfQuarter(DataAtual)), type logical),
    IdentificaOffsetMes = Table.AddColumn(InsereTrimestreCompleto, "MesOffsetFechamento", each if DiaInicioMes = 1 then [Offset Mês] else if DiaInicioMes > [Dia] then [Offset Mês] else [Offset Mês] + 1),
    RemoveDuplicados = Table.Distinct(IdentificaOffsetMes, {"Offset Mês"}),
    MesclaConsultas = Table.NestedJoin(IdentificaOffsetMes, {"MesOffsetFechamento"}, RemoveDuplicados, {"Offset Mês"}, "Join", JoinKind.LeftOuter),
    #"Join Expandido" = Table.ExpandTableColumn(MesclaConsultas, "Join", {"Mês/Ano", "AnoMes"}, {"Mês/Ano Fechamento", "AnoMes Fechamento"}),
    #"Colunas Removidas" = Table.RemoveColumns(#"Join Expandido",{"MesOffsetFechamento"}),
    #"Tipo Alterado" = Table.TransformColumnTypes(#"Colunas Removidas",{{"Data", type date}, {"Ano", Int64.Type}, {"Trimestre", Int64.Type}, {"MesNo", Int64.Type}, {"Dia", Int64.Type}, {"AnoMesDia", Int64.Type}, {"Mês", type text}, {"Mês/Ano", type text}, {"Trimestre/Ano", type text}, {"Dia da Semana", Int64.Type}, {"Nome do Dia", type text}, {"Semana do Ano", Int64.Type}, {"Semana/Ano", type text}, {"AnoSemana", Int64.Type}, {"AnoMes", Int64.Type}, {"AnoTrimestre", Int64.Type}, {"Ano Fiscal", type text}, {"Trimestre Fiscal", type text}, {"Mês Fiscal", Int64.Type}, {"Futuro", type logical}, {"Dia Útil", type logical}, {"Offset Dia", Int64.Type}, {"Offset Semana", Int64.Type}, {"Offset Mês", Int64.Type}, {"Offset Trimestre", Int64.Type}, {"Offset Ano", Int64.Type}, {"Offset Ano Fiscal", Int64.Type}, {"Semana Completa", type logical}, {"Mês Completo", type logical}, {"Trimestre Completo", type logical}, {"Mês/Ano Fechamento", type text}, {"AnoMes Fechamento", Int64.Type}})
in
    #"Tipo Alterado"